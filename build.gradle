/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/4.3/userguide/tutorial_java_projects.html
 */

plugins {
    id "com.github.ben-manes.versions" version "0.20.0"
    id 'com.github.kt3k.coveralls' version '2.8.2'
    id 'jacoco'
    id 'net.ltgt.apt' version '0.19'
}

// Apply the java plugin to add support for Java
apply plugin: 'java'

// Apply the application plugin to add support for building an application
apply plugin: 'application'

// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

dependencies {
    // This dependency is found on compile classpath of this component and consumers.
    compile 'com.google.api-client:google-api-client:1.25.0'
    compile 'com.google.code.gson:gson:2.8.5'
    compile 'com.google.dagger:dagger:2.17'
    compile 'com.google.guava:guava:26.0-jre'
    compile 'com.sparkjava:spark-core:2.8.0'
    compile 'org.apache.logging.log4j:log4j-api:2.11.1'
    compile 'org.apache.logging.log4j:log4j-core:2.11.1'
    compile 'org.apache.logging.log4j:log4j-slf4j-impl:2.11.1'
    compile 'org.postgresql:postgresql:42.2.5'

    compileOnly 'org.projectlombok:lombok:1.18.2'

    annotationProcessor 'com.google.dagger:dagger-compiler:2.17'
    annotationProcessor 'org.projectlombok:lombok:1.18.2'

    testCompile 'com.h2database:h2:1.4.197'
    // Use JUnit test framework
    testCompile 'junit:junit:4.12'
    testCompile 'org.easymock:easymock:3.6'
}

jacocoTestReport {
    reports {
        xml.enabled = true // coveralls plugin depends on xml format report
        html.enabled = true
    }
}

test {
    testLogging {
        // show stacktrace and logs
        exceptionFormat = 'full'
        showStandardStreams = true
    }
}

sourceSets.main.java.srcDirs = ['build/generated/source/apt/main','src/main/java']

// Define the main class for the application
mainClassName = 'me.ericjiang.frontiersmen.Server'

def database = 'frontiersmen'

task createdb {
    doLast {
        exec {
            commandLine 'createdb'
            args database
        }
        exec {
            workingDir 'src/main/sql'
            commandLine 'psql'
            args database, '-af', 'create.sql'
        }
    }
}

task dropdb {
    doLast {
        exec {
            commandLine 'dropdb'
            args database
        }
    }
}

task resetdb {
    doLast {
        exec {
            commandLine 'dropdb'
            args database
        }
        exec {
            commandLine 'createdb'
            args database
        }
        exec {
            workingDir 'src/main/sql'
            commandLine 'psql'
            args database, '-af', 'create.sql'
        }
    }
}

// Heroku task
task stage(dependsOn: ['clean', 'installDist'])
