/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/4.0.1/userguide/tutorial_java_projects.html
 */

plugins {
    id 'jacoco'
    id 'com.github.kt3k.coveralls' version '2.6.3'
}

// Apply the java plugin to add support for Java
apply plugin: 'java'

// Apply the application plugin to add support for building an application
apply plugin: 'application'

// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

dependencies {
    // This dependency is found on compile classpath of this component and consumers.
    compile 'org.json:json:20170516'
    compile 'org.slf4j:slf4j-api:1.7.25'
    compile 'org.slf4j:slf4j-simple:1.7.25'
    compile 'org.postgresql:postgresql:42.1.4'
    compile 'org.projectlombok:lombok:1.16.18'
    compile 'com.google.api-client:google-api-client:1.22.0'
    compile 'com.google.code.gson:gson:2.8.1'
    compile 'com.google.guava:guava:22.0'
    compile 'com.j2html:j2html:1.0.0'
    compile 'com.sparkjava:spark-core:2.6.0'
    compile 'com.sparkjava:spark-template-thymeleaf:2.5.5'

    // Use JUnit test framework
    testCompile 'junit:junit:4.12'
}

// Define the main class for the application
mainClassName = 'me.ericjiang.settlers.spark.Settlers'

def database = 'settlers'

task createdb {
    doLast {
        exec {
            commandLine 'createdb'
            args database
        }
        exec {
            workingDir 'src/main/sql'
            commandLine 'psql'
            args database, '-af', 'create.sql'
        }
    }
}

task dropdb {
    doLast {
        exec {
            commandLine 'dropdb'
            args database
        }
    }
}

task resetdb {
    doLast {
        exec {
            commandLine 'dropdb'
            args database
        }
        exec {
            commandLine 'createdb'
            args database
        }
        exec {
            workingDir 'src/main/sql'
            commandLine 'psql'
            args database, '-af', 'create.sql'
        }
    }
}

// Heroku task
task stage {
    dependsOn installDist
}

test {
    testLogging.showStandardStreams = true
}

check {
    dependsOn jacocoTestReport
}

jacocoTestReport {
    reports {
        xml.enabled = true // coveralls plugin depends on xml format report
        html.enabled = true
    }
}
